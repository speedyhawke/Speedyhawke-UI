# Use the Windows Server Core 2022 image as the base.
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set up the working directory.
WORKDIR /build

# Install Chocolatey, a package manager for Windows.
RUN powershell -NoProfile -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"

# Use Chocolatey to install Node.js LTS, Git, and Zip.
# Git is required for some npm packages.
# Zip is required for the final packaging step.
RUN choco install nodejs-lts -y --version=18.17.0
RUN choco install git -y
RUN choco install zip -y

# Copy the package.json and package-lock.json (if it exists) first to leverage Docker layer caching.
COPY package.json .
COPY package-lock.json* .

# Install dependencies.
RUN npm install

# Copy the rest of the application source code.
COPY . .

# This is a critical step to apply custom patches.
RUN npm run monkeypatch

# Set the command to open a PowerShell terminal. This allows for interactive debugging.
CMD ["powershell"]
